<UserControl x:Class="ClickFree.Views.OnboardingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ClickFree.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#32373D"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <!--<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>-->
                            <Border x:Name="contentPanel" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <!--<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>-->
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <!--<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>-->
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <!--<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>-->
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <!--<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>-->
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <!--<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>-->
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <!--<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>-->
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <!--<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>-->
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <!--<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <VisualBrush x:Key="SubmitEmailPlaceholderBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
            <VisualBrush.Visual>
                <Label Content="Email" Foreground="White" Opacity="0.6" Padding="10,0,0,0"/>
            </VisualBrush.Visual>
        </VisualBrush>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="SubmitEmailTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#1C1E20"/>
            <Setter Property="BorderBrush" Value="#33383E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid x:Name="borderGrid">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="12,0,0,0" Focusable="false" VerticalAlignment="Center" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <!--<TextBlock Text="Email" Margin="12,0,0,0" Foreground="White" Opacity="0.6" VerticalAlignment="Center"/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                <Setter Property="Background" TargetName="borderGrid" Value="{StaticResource SubmitEmailPlaceholderBrush}" />
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" TargetName="borderGrid" Value="{StaticResource SubmitEmailPlaceholderBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <!--<Setter Property="Background" TargetName="borderGrid" Value="White" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Margin" Value="6,0,6,0"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0*"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Grid.RowSpan="2">
                                <Grid x:Name="markGrid">
                                    <Image x:Name="imgSelected" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Source="pack://application:,,,/ClickFree;component/Resources/Navigation/selected tab.png"
                                           Width="8" Height="8" Visibility="{TemplateBinding IsChecked, Converter={StaticResource ObjectToVisibilityConverter}}"/>

                                    <Image x:Name="imgDeSelected" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Source="pack://application:,,,/ClickFree;component/Resources/Navigation/unselected tab.png"
                                           Width="8" Height="8" Visibility="{TemplateBinding IsChecked, Converter={StaticResource ObjectToVisibilityConverter}, ConverterParameter=invert}" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="imgSelected" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="imgDeSelected" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="imgSelected" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="imgDeSelected" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="NavButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SkipButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="#3FA8E3" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{StaticResource Montserrat}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}">
                            <TextBlock x:Name="content" Text="{TemplateBinding Content}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="{StaticResource SelectAllButtonMouseHoverForeground}" />
                            </Trigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="34" Margin="0,50.2,0,32">
                <Run Text="Click" FontFamily="Josefin Sans" Foreground="#54BAF4" /><Run Text="Free" FontFamily="Jura" Foreground="White"/>
            </TextBlock>
            <Grid HorizontalAlignment="Center" Height="230">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="452"/>
                    <ColumnDefinition Width="35"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Command="{Binding PrevPageCommand}" HorizontalAlignment="Left"
                        Style="{DynamicResource NavButtonStyle}"
                        Visibility="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource VisibilityValueComparerConverter}, ConverterParameter=1|2}">
                    <Image x:Name="prev" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Source="pack://application:,,,/ClickFree;component/Resources/Navigation/prev_board.png"
                                           Width="13.68" Height="24"/>
                </Button>

                <Button Grid.Column="2"  Command="{Binding NextPageCommand}" HorizontalAlignment="Right"
                        Style="{DynamicResource NavButtonStyle}" 
                        Visibility="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource VisibilityValueComparerConverter}, ConverterParameter=0|1}">
                    <Image x:Name="next" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Source="pack://application:,,,/ClickFree;component/Resources/Navigation/next_board.png"
                                           Width="13.68" Height="24"/>
                </Button>
                <TabControl x:Name="tabControl" Grid.Column="1" SelectedIndex="{Binding CurrentPage}"  Style="{DynamicResource TabControlStyle}">
                    <TabItem Header="Intro" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Quick Start Guide" Foreground="White" FontSize="20" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,23,0,0" HorizontalAlignment="Center" Width="395" Height="24" LineHeight="24" FontWeight="Medium"
                                       TextAlignment="Center" />

                            <TextBlock TextAlignment="Justify" Width="395" TextWrapping="WrapWithOverflow" FontWeight="Normal"
                                       Foreground="#B2B2B2" FontSize="14" FontFamily="{StaticResource Montserrat}"
                                       LineHeight="20" Margin="0,16,0,0">
                                <Run Text="Tap" />
                                <Run Text="Backup your photos and videos to USB" FontWeight="Bold" /><Run Text=" to get started. The first backup can take a long time if you have a lot of pictures and videos. You can stop the backup at any time and next time it will resume where it left off. You can also transfer your media files to your computer by tapping on " /><Run Text="Backup your photos and videos to USB" FontWeight="Bold" />
                            </TextBlock>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Submit Email">
                        <Grid>
                            <StackPanel Orientation="Vertical"  Visibility="{Binding EmailSubmitted, Converter={StaticResource ObjectToVisibilityConverter}, ConverterParameter=invert}">
                                <TextBlock Text="Submit Email" Foreground="White" FontSize="20" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,23,0,0" HorizontalAlignment="Center" Width="395" Height="20" LineHeight="24" FontWeight="Medium"
                                       TextAlignment="Center" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,25,0,0">
                                    <TextBox Style="{StaticResource SubmitEmailTextBoxStyle}" 
                                             Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"
                                             FontFamily="{StaticResource Montserrat}" 
                                             Width="278" Height="32"/>
                                    <Button Content="Submit" Margin="14,0,0,0"
                                        Style="{StaticResource OnBoardingSubmitButtonStyle}" 
                                            Command="{Binding SubmitEmailCommand}"/>
                                </StackPanel>

                                <TextBlock TextAlignment="Left" Width="386" TextWrapping="WrapWithOverflow" FontWeight="Normal"
                                       Foreground="#B2B2B2" FontSize="14" FontFamily="{StaticResource Montserrat}"
                                       LineHeight="20" Margin="0,16,0,0">
                                <Run Text="IMPORTANT: We never see any of your pictures, contacts or information on your device. " />
                                <LineBreak />
                                <Run Text="For more help or to ask us a question, simply enter your email now." />
                                </TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Visibility="{Binding EmailSubmitted, Converter={StaticResource ObjectToVisibilityConverter}}">
                                <TextBlock Text="Submit Email" Foreground="White" FontSize="20" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,23,0,0" HorizontalAlignment="Center" Width="395" Height="20" LineHeight="24" FontWeight="Medium"
                                       TextAlignment="Center" />

                                <Image HorizontalAlignment="Center" Width="50" Margin="0,50,0,0"
                                       Source="pack://application:,,,/ClickFree;component/Resources/Success.png" />

                                <TextBlock Text="Welcome email was sent" Foreground="#B2B2B2" FontSize="14" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,38,0,0" HorizontalAlignment="Center" Width="386" Height="20" LineHeight="20" FontWeight="Normal"
                                       TextAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Contact from">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                            <TextBlock Text="Contact from" Foreground="White" FontSize="20" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,23,0,0" HorizontalAlignment="Center" Width="395" Height="20" LineHeight="24" FontWeight="Medium"
                                       TextAlignment="Center" />

                            <TextBlock Text="If you need help you can always reach us via:" Foreground="#B2B2B2" FontSize="14" FontFamily="{StaticResource Montserrat}"
                                       Margin="0,38,0,0" HorizontalAlignment="Center" Width="386" Height="20" LineHeight="20" FontWeight="Normal"
                                       TextAlignment="Center" />

                            <Button Content="Contact Us" Margin="0,24,0,0" Style="{StaticResource OnBoardingSubmitButtonStyle}"
                                    Command="{Binding SendEmailCommand}"/>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Grid>
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,19,0,0">
                    <RadioButton Style="{DynamicResource NavRadioButtonStyle}" IsChecked="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource ValueComparerConverter}, ConverterParameter=0}" />
                    <RadioButton Style="{DynamicResource NavRadioButtonStyle}" IsChecked="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource ValueComparerConverter}, ConverterParameter=1}" />
                    <RadioButton Style="{DynamicResource NavRadioButtonStyle}" IsChecked="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource ValueComparerConverter}, ConverterParameter=2}" />
                </StackPanel>

                <Button Content="Skip" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                        Visibility="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource VisibilityValueComparerConverter}, ConverterParameter=0|1}"
                        Style="{StaticResource SkipButtonStyle}"
                        Margin="0,19,35,0" Command="{Binding SkipCommand}"/>

                <Button Content="Start" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                        Visibility="{Binding SelectedIndex, ElementName=tabControl, Converter={StaticResource VisibilityValueComparerConverter}, ConverterParameter=2}"
                        Style="{StaticResource SkipButtonStyle}"
                        Margin="0,19,35,0" Command="{Binding StartCommand}"/>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
